.TH "classrec" 3 "8 Sep 2003" "Megistos API" \" -*- nroff -*-
.ad l
.nh
.SH NAME
classrec \- User class.  

.PP
.SH SYNOPSIS
.br
.PP
\fC#include <useracc.h>\fP
.PP
.SS "Data Fields"

.in +1c
.ti -1c
.RI "char \fBname\fP [10]"
.br
.ti -1c
.RI "char \fBnotaround\fP [10]"
.br
.ti -1c
.RI "\fBint32\fP \fBnadays\fP"
.br
.ti -1c
.RI "char \fBaround\fP [10]"
.br
.ti -1c
.RI "\fBint32\fP \fBardays\fP"
.br
.ti -1c
.RI "char \fBnocreds\fP [10]"
.br
.ti -1c
.RI "char \fBcredpost\fP [10]"
.br
.ti -1c
.RI "\fBint32\fP \fBlimpercall\fP"
.br
.ti -1c
.RI "\fBint32\fP \fBlimperday\fP"
.br
.ti -1c
.RI "\fBint32\fP \fBcrdperday\fP"
.br
.ti -1c
.RI "\fBint32\fP \fBcrdperweek\fP"
.br
.ti -1c
.RI "\fBint32\fP \fBcrdpermonth\fP"
.br
.ti -1c
.RI "\fBuint32\fP \fBflags\fP"
.br
.ti -1c
.RI "\fBuint32\fP \fBusers\fP"
.br
.ti -1c
.RI "\fBbbskey_t\fP \fBkeys\fP [KEYLENGTH]"
.br
.ti -1c
.RI "char \fBdummy\fP [512-104]"
.br
.in -1c
.SH "Detailed Description"
.PP 
User class. 

This structure describes one user class. Classes are there to help you manage your users in a large system, with many different types of people and services. For instance, you can design a monthly subscription system whereby users pay to get full access for a month. Or, you could make a class where people are allowed two hours a day online time for a month, then are moved to a full-access class where the normal credit charging system applies. The possibilities are endless.
.PP
The set of classes in use define a graph. Transitions between classes happen based on various events: the user's absence from the system; the user staying in a class for a number of days; the user running out of credits; and the user receiving credits. The operator can also move a user to an arbitrary class.
.PP
Here are the class fields. They'll show exactly what you can do with classes.
.PP
{description}
.PP
[\fCname\fP] The name of the class. For no reason in particular, convention is to make class names upper case.
.PP
[\fCnotaround}, { nadays\fP] This pair of fields define the name of a class (\fCnotaround\fP) the user will be moved to if they don't use the system for {} days. This is useful for revoking privileges of people who've stopped using the system. Setting \fCnotaround\fP to be equal to \fCname\fP effectively disables this class transition.
.PP
[\fCaround}, { ardays\fP] Like above, but the user is moved to class \fCaround\fP if they've been in their current class for at least { ardays}. Setting \fCaround} to be equal to { name\fP effectively disables this class transition.
.PP
[\fCnocreds, credpost\fP] Users running out of credits are temporarily moved to class specified by \fCnocreds\fP for the rest of the day (provided the coming cleanup posts credits to them). Users receiving credits are moved to the class specified by \fCcredpost\fP. Disabling this transitions is done in the usual manner, setting the target class to \fCname\fP.
.PP
[\fClimpercall, limperday\fP] Denote respectively the maximum online time per call and maximum daily online time for a user in this class. Regardless of the amount of credits a user has, they will be (politely) kicked out when they exceed their time limits. For time limits on a per-call basis, the user can redial later and get another { limpercall} minutes online, as long as they have credits. These values may be set to -1 to denote no limitations on time.
.PP
[\fCcrdperday\fP] Specifies the minimum number of credits the user should have at the beginning of each day. If the user has less credits than \fCcrdperday\fP, the cleanup process posts enough credits to bring the user to the minimum. If the user has more credits than the minimum, nothing is done.
.PP
[\fCcrdperweek, crdpermonth\fP] These fields specify bonuses (or taxes, if negative) given to users on a weekly and monthly basis. Unlike the above field, these amounts are \fIposted\fP to the user's account (i.e. they don't work as minima).
.PP
[\fCflags\fP] A set of flags describing minor features of the class, given by zero or more \fCCLF_x\fP flags ORred together.
.PP
[\fCusers\fP] The number of users in this class. Updated every cleanup.
.PP
[\fCkeys\fP] The class keyring. This is combined with users' personal keyrings to provide the full set of keys owned by the user.
.PP
{description} 
.PP
Definition at line 740 of file useracc.h.
.SH "Field Documentation"
.PP 
.SS "\fBint32\fP \fBclassrec::ardays\fP"
.PP
Definition at line 745 of file useracc.h.
.SS "char \fBclassrec::around\fP[10]"
.PP
Definition at line 744 of file useracc.h.
.SS "\fBint32\fP \fBclassrec::crdperday\fP"
.PP
Definition at line 750 of file useracc.h.
.SS "\fBint32\fP \fBclassrec::crdpermonth\fP"
.PP
Definition at line 752 of file useracc.h.
.SS "\fBint32\fP \fBclassrec::crdperweek\fP"
.PP
Definition at line 751 of file useracc.h.
.SS "char \fBclassrec::credpost\fP[10]"
.PP
Definition at line 747 of file useracc.h.
.SS "char \fBclassrec::dummy\fP[512-104]"
.PP
Definition at line 757 of file useracc.h.
.SS "\fBuint32\fP \fBclassrec::flags\fP"
.PP
Definition at line 753 of file useracc.h.
.SS "\fBbbskey_t\fP \fBclassrec::keys\fP[KEYLENGTH]"
.PP
Definition at line 755 of file useracc.h.
.SS "\fBint32\fP \fBclassrec::limpercall\fP"
.PP
Definition at line 748 of file useracc.h.
.SS "\fBint32\fP \fBclassrec::limperday\fP"
.PP
Definition at line 749 of file useracc.h.
.SS "\fBint32\fP \fBclassrec::nadays\fP"
.PP
Definition at line 743 of file useracc.h.
.SS "char \fBclassrec::name\fP[10]"
.PP
Definition at line 741 of file useracc.h.
.SS "char \fBclassrec::nocreds\fP[10]"
.PP
Definition at line 746 of file useracc.h.
.SS "char \fBclassrec::notaround\fP[10]"
.PP
Definition at line 742 of file useracc.h.
.SS "\fBuint32\fP \fBclassrec::users\fP"
.PP
Definition at line 754 of file useracc.h.

.SH "Author"
.PP 
Generated automatically by Doxygen for Megistos API from the source code.
